#background {
  /* position: absolute; */
  /* top: 0;
  bottom: 0;
  left: 0;
  right: 0; */
  height: 100vh;
  width: 100%; /* Can take the margin off the body and then add a margin to the text below.*/
  background: linear-gradient(0deg, lightblue, 10%, white, darkblue, yellow);
  /* z-index: -1; */
}
body {
  /* height: 150vh; */
}
.ball {
  --speed: 2720;
  background-image: url(img/JugglingBall-BeachBall.png);
  background-size: cover;
  animation-iteration-count: infinite;
  animation-duration: calc(var(--speed) * 1ms);
  position: absolute;
  border-radius: 50%;
  width: var(--ballSize);
  height: var(--ballSize);
}
.leftBall {
  animation-name: leftBall;
}
.rightBall {
  animation-name: rightBall;
  z-index: 1;
}
#ball1 {
  animation-delay: 0ms;
}
#ball2 {
  animation-delay: calc((var(--speed) / 8) * 1ms);
}
#ball3 {
  animation-delay: calc((var(--speed) / 8) * 2ms);
}
#ball4 {
  animation-delay: calc((var(--speed) / 8) * 3ms);
}
#ball5 {
  animation-delay: calc((var(--speed) / 8) * 4ms);
}
#ball6 {
  animation-delay: calc((var(--speed) / 8) * 5ms);
}
#ball7 {
  animation-delay: calc((var(--speed) / 8) * 6ms);
}
#ball8 {
  animation-delay: calc((var(--speed) / 8) * 7ms);
}
.cannon {
  position: absolute;
  bottom: -7%;
  --cannonWidth: 35%;
  width: var(--cannonWidth);
}
#leftCannon {
  left: var(--edgeOffset);
  translate: -1.5%;
  transform: rotate(-47.12deg);
  transform-origin: left 60%;
}
#rightCannon {
  margin-right: calc(var(--cannonWidth) * -1);
  transform: rotateY(180deg) rotate(-47.12deg);
  right: var(--edgeOffset);
  translate: 1.5%;
  transform-origin: left 60%;
  z-index: 2;
}
.cloud {
  width: 60%;
  position: absolute;
  bottom: 0;
}
#leftCloud {
  transform: rotateY(180deg);
  left: 0;
}
#rightCloud {
  right: 0;
}
#flexBoxContainer {
  display: flex;
  flex-wrap: wrap-reverse;
  justify-content: center;
}

#jugglingContainer {
  /* background-color: green; */

  flex-grow: 1;
  position: relative;

  --edgeOffset: 22%;
  --ballSize: 8%;

  border-left: solid calc(var(--ballSize) / 2) transparent;
  border-right: solid calc(var(--ballSize) / 2) transparent;

  height: 1000px; /* 1000px */
  /* width: 1000px; */
  min-width: 1000px;
  max-width: 1000px;
  /* overflow: hidden; */
  /* transform: scale(0.4); */
}
#video {
  /* position: absolute; */
  /* top: 0.5vw; */
  /* left: 0.5%; */ /*Should use rem?*/
  /* display: inline-block; */
  /* width: 30%;
  height: 30%; */

  flex-grow: 1;
  margin-bottom: 50vh;
  /* margin: 2rem; */
}

/* Could use percents for the juggling container and have the container stretch while keeping aspect ratio
you will not need to use scale anymore. */

@keyframes leftBall {
  0% {
    left: var(--edgeOffset);
    top: calc(100% - var(--ballSize) * 2);
    animation-timing-function: cubic-bezier(0.55, 0.83, 0.77, 0.88);
  }
  50% {
    left: 53%;
    top: 0;
    animation-timing-function: cubic-bezier(0.17, 0.13, 0.6, 0.37);
    transform: rotate(-360deg);
  }
  100% {
    transform: rotate(-1080deg);
    left: 92%;
    top: calc(100% - var(--ballSize));
  }
}
@keyframes rightBall {
  0% {
    right: var(--edgeOffset);
    top: calc(100% - var(--ballSize) * 2);
    animation-timing-function: cubic-bezier(0.55, 0.83, 0.77, 0.88);
  }
  50% {
    right: 53%;
    top: 0;
    animation-timing-function: cubic-bezier(0.17, 0.13, 0.6, 0.37);
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(1080deg);
    right: 92%;
    top: calc(100% - var(--ballSize));
  }
}
/* @media (max-aspect-ratio: 1/1) {
  #jugglingContainer {
    top: 0;
    left: 0;
    height: 60%;
    width: 100%;
  }
  #video {
    top: auto;
    bottom: 0.5%;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    height: 39.5%;
    width: 90%;
  }
} */
